// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include "YARNTetrischedService.h"

#include <thrift/protocol/TBinaryProtocol.h>
#include <thrift/transport/TSocket.h>
#include <thrift/transport/TTransportUtils.h>

using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;

using namespace ::alsched;

int main(int argc, char **argv) {
  const int yarnport = 9090;
  boost::shared_ptr<TTransport> socket(new TSocket("r0", yarnport));
  boost::shared_ptr<TTransport> transport(new TBufferedTransport(socket));
  boost::shared_ptr<TProtocol> protocol(new TBinaryProtocol(transport));

  YARNTetrischedServiceClient client(protocol);

  try {
    transport->open();

    std::set<int32_t> machines;
    machines.insert(0);
    machines.insert(1);
    client.AllocResources(1, machines);

    transport->close();
  } catch (TException& tx) {
    printf("ERROR: %s\n", tx.what());
  }

  return 0;
}
