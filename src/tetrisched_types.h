/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef tetrisched_TYPES_H
#define tetrisched_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <thrift/cxxfunctional.h>


namespace alsched {

struct job_t {
  enum type {
    JOB_MPI = 0,
    JOB_HDFS = 1,
    JOB_GPU = 2,
    JOB_WEB = 3,
    JOB_AVAIL = 4,
    JOB_NONE = 5,
    JOB_UNKNOWN = 6,
    JOB_MAX = 7
  };
};

extern const std::map<int, const char*> _job_t_VALUES_TO_NAMES;

typedef int32_t JobID;

} // namespace

#endif
